/**
 * This file is generated by Ankit Singh Katiyar
 * Generated On Mar 23, 2014 for the hibernate services of a portal project
 */
package com.ankit.portal.service.domain;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.Source;
import org.hibernate.annotations.SourceType;

/**
 * @author Ankit
 * 
 */
@Entity(name="ForumAnswer")
@Table(name="forum_answer")
@Cacheable(value=true)
@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
public class ForumAnswer implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "answer_id")
    private Long id;

    @ManyToOne(targetEntity = User.class)
    @JoinColumn(name="user_id")
    private User postedBy;

    @Column(length = 5000,nullable=false)
    private String content;

    @Temporal(TemporalType.TIMESTAMP)
    @Version
    @Source(SourceType.VM)
    private Date postedOn;

    @Temporal(TemporalType.TIMESTAMP)
    @Version
    @Source(SourceType.VM)
    private Date lastUpdated;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public User getPostedBy() {
        return postedBy;
    }

    public void setPostedBy(User postedBy) {
        this.postedBy = postedBy;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public Date getPostedOn() {
        return postedOn;
    }

    @PrePersist
    private void setPostedOn(Date postedOn) {
        this.postedOn = postedOn;
    }

    public Date getLastUpdated() {
        return lastUpdated;
    }

    @PreUpdate
    private void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

}
